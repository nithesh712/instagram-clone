{"version":3,"sources":["components/Navbar.js","components/Container.js","components/Home.js","components/Profile.js","components/Signup.js","components/Signin.js","components/UserProfile.js","components/CreatePost.js","reducer/userReducer.js","components/Followingposts.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","useContext","userContext","state","dispatch","history","useHistory","className","src","alt","Search","to","Avatar","pic","Button","onClick","localStorage","clear","type","push","Container","useState","data","setData","useEffect","fetch","headers","Authorization","getItem","then","res","json","result","posts","map","item","key","_id","postedBy","name","style","cursor","postid","method","console","log","newData","filter","photo","likes","includes","color","id","body","JSON","stringify","postId","catch","err","length","title","comments","record","fontWeight","text","onSubmit","e","preventDefault","target","value","placeholder","Home","Profile","myPics","setMyPics","email","followers","following","Signup","setName","password","setPassword","setEmail","image","setImage","undefined","url","setUrl","uploadFields","test","M","toast","html","classes","error","message","postData","FormData","append","uploadPhoto","onChange","border","height","borderRadius","textAlign","files","variant","Signin","setItem","token","user","payload","userProfile","setProfile","userid","useParams","showFollow","setShowFollow","followId","prevState","unfollowId","newFollower","CreatPost","setTitle","setBody","postDetails","reducer","action","createContext","Routing","parse","location","pathname","startsWith","exact","path","CreatePost","App","useReducer","Provider","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1ef65b17.chunk.js","sourcesContent":["import React, { useContext } from \"react\";\r\nimport \"../styles/Navbar.css\";\r\nimport { Avatar, Button } from \"@material-ui/core\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\r\nimport ExploreIcon from \"@material-ui/icons/Explore\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { userContext } from \"../App\";\r\nimport { Search } from \"@material-ui/icons\";\r\n\r\nfunction Navbar() {\r\n  const { state, dispatch } = useContext(userContext);\r\n  const history = useHistory();\r\n  const renderList = () => {\r\n    if (state) {\r\n      return [\r\n        <Link className=\"navbar__link\">\r\n          <Search />\r\n        </Link>,\r\n        <Link className=\"navbar__link\" to=\"/followersposts\">\r\n          <HomeIcon />\r\n        </Link>,\r\n        <Link className=\"navbar__link\" to=\"/createpost\">\r\n          <AddCircleOutlineIcon />\r\n        </Link>,\r\n        <Link className=\"navbar__link\" to=\"/\">\r\n          <ExploreIcon />\r\n        </Link>,\r\n        <Link className=\"navbar__link\" to=\"/profile\">\r\n          <Avatar src={state ? state.pic : \"Loading\"} alt=\"\" />\r\n        </Link>,\r\n        <Button\r\n          onClick={() => {\r\n            localStorage.clear();\r\n            dispatch({ type: \"CLEAR\" });\r\n            history.push(\"/signin\");\r\n          }}\r\n          className=\"navbar__link\"\r\n        >\r\n          <ExitToAppIcon />\r\n        </Button>,\r\n      ];\r\n    } else {\r\n      return [\r\n        <Link className=\"navbar__link\" to=\"/signup\">\r\n          <AccountBoxIcon />\r\n        </Link>,\r\n      ];\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"navbar\">\r\n      <div className=\"navbar__left\">\r\n        <img\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Instagram_logo.svg/1200px-Instagram_logo.svg.png\"\r\n          alt=\"\"\r\n        />\r\n      </div>\r\n      <div className=\"navbar__right\">{renderList()}</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"../styles/Container.css\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\r\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { userContext } from \"../App\";\r\n\r\nfunction Container() {\r\n  const [data, setData] = useState([]);\r\n  const { state, dispatch } = useContext(userContext);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/posts\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // console.log(result);\r\n        setData(result.posts);\r\n      });\r\n  }, []);\r\n\r\n  const likePost = (id) => {\r\n    fetch(\"/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const unlikePost = (id) => {\r\n    fetch(\"/unlike\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const makeComment = (text, postId) => {\r\n    fetch(\"/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: postId,\r\n        text: text,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (item._id == result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deletePost = (postid) => {\r\n    fetch(`/deletepost/${postid}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.filter((item) => {\r\n          return item._id !== result._id;\r\n        });\r\n        setData(newData);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {data.map((item) => {\r\n        // console.log(item);\r\n        return (\r\n          <div key={item._id} className=\"container__main\">\r\n            <div className=\"container__header\">\r\n              <img src={item.postedBy.pic} alt=\"\" />\r\n              <h6>\r\n                <Link\r\n                  to={\r\n                    item.postedBy._id !== state._id\r\n                      ? `/profile/${item.postedBy._id}`\r\n                      : `/profile`\r\n                  }\r\n                >\r\n                  {item.postedBy.name}\r\n                </Link>\r\n              </h6>\r\n              {item.postedBy._id === state._id && (\r\n                <Delete\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() => deletePost(item._id)}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"container__body\">\r\n              <img src={item.photo} alt=\"\" />\r\n              <div className=\"container__bodyIcons\">\r\n                {item.likes.includes(state._id) ? (\r\n                  <FavoriteIcon\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                      unlikePost(item._id);\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <FavoriteBorderIcon\r\n                    onClick={() => {\r\n                      likePost(item._id);\r\n                    }}\r\n                  />\r\n                )}\r\n\r\n                <ChatBubbleOutlineOutlinedIcon />\r\n                <SendOutlinedIcon />\r\n              </div>\r\n              <h6>{item.likes.length} Likes</h6>\r\n              <h6>{item.title}</h6>\r\n              <p>{item.body}</p>\r\n              {/* Make Comments page here down */}\r\n              {item.comments.map((record) => {\r\n                return (\r\n                  <h6 key={record._id}>\r\n                    <span style={{ fontWeight: \"500\" }}>\r\n                      {record.postedBy.name}\r\n                    </span>{\" \"}\r\n                    {record.text}\r\n                  </h6>\r\n                );\r\n              })}\r\n              <hr></hr>\r\n              <form\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  makeComment(e.target[0].value, item._id);\r\n                }}\r\n                className=\"container__bodyFooter\"\r\n              >\r\n                <input type=\"text\" placeholder=\"Add a comment...\" />\r\n                <Button>Post</Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import React from \"react\";\r\nimport Container from \"./Container\";\r\nimport \"../styles/Home.css\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <div className=\"home\">\r\n      <Container />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport { userContext } from \"../App\";\r\nimport \"../styles/Profile.css\";\r\n\r\nfunction Profile() {\r\n  const [myPics, setMyPics] = useState([]);\r\n  const [image, setImage] = useState(\"\");\r\n  const { state, dispatch } = useContext(userContext);\r\n  useEffect(() => {\r\n    fetch(\"/myposts\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // console.log(result);\r\n        setMyPics(result);\r\n      });\r\n  }, []);\r\n\r\n  // useEffect(() => {\r\n  //   if (image) {\r\n  //     const data = new FormData();\r\n  //     data.append(\"file\", image);\r\n  //     data.append(\"upload_preset\", \"instagram\");\r\n  //     data.append(\"cloud_name\", \"dmxlnl9ee\");\r\n\r\n  //     fetch(\"https://api.cloudinary.com/v1_1/dmxlnl9ee/image/upload\", {\r\n  //       method: \"post\",\r\n  //       body: data,\r\n  //     })\r\n  //       .then((res) => res.json())\r\n  //       .then((data) => {\r\n  //         // console.log(data);\r\n  //         // localStorage.setItem(\r\n  //         //   \"user\",\r\n  //         //   JSON.stringify({ ...state, pic: data.url })\r\n  //         // );\r\n  //         // dispatch({ type: \"UPDATEPIC\", payload: data.url });\r\n  //         fetch(\"/updatepic\", {\r\n  //           method: \"put\",\r\n  //           headers: {\r\n  //             \"Content-Type\": \"application/json\",\r\n  //             Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n  //           },\r\n  //           body: JSON.stringify({\r\n  //             pic: data.url,\r\n  //           }),\r\n  //         })\r\n  //           .then((res) => res.json())\r\n  //           .then((result) => {\r\n  //             console.log(result);\r\n  //             localStorage.setItem(\r\n  //               \"user\",\r\n  //               JSON.stringify({ ...state, pic: result.pic })\r\n  //             );\r\n  //             dispatch({ type: \"UPDATEPIC\", payload: result.pic });\r\n  //             //window.location.reload()\r\n  //           });\r\n  //       })\r\n  //       .catch((err) => {\r\n  //         console.log(err);\r\n  //       });\r\n  //   }\r\n  // }, [image]);\r\n  // const updatePhoto = (file) => {\r\n  //   setImage(file);\r\n  // };\r\n  // console.log(state);\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"profile__div1\">\r\n        <div className=\"profile__info\">\r\n          <img\r\n            className=\"profile__image\"\r\n            src={state ? state.pic : \"Loading\"}\r\n            alt=\"\"\r\n          />\r\n          {/* <span>Update Image</span>\r\n          <input onChange={(e) => updatePhoto(e.target.files[0])} type=\"file\" /> */}\r\n        </div>\r\n        <div>\r\n          <h4>{state ? state.name : \"Loading...\"}</h4>\r\n          <h4>{state ? state.email : \"Loading...\"}</h4>\r\n          <div className=\"profile__details\">\r\n            <h6>{myPics.length} Posts</h6>\r\n            <h6>{state ? state.followers.length : \"0\"} Followers</h6>\r\n            <h6>{state ? state.following.length : \"0\"} Following</h6>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <hr></hr>\r\n      <div className=\"profile__div2\">\r\n        {myPics.map((item) => {\r\n          return (\r\n            <img\r\n              className=\"profile__images\"\r\n              key={item._id}\r\n              src={item.photo}\r\n              alt=\"\"\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"../styles/Signin.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport M from \"materialize-css\";\r\n\r\nfunction Signup() {\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [url, setUrl] = useState(undefined);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      uploadFields();\r\n    }\r\n  }, [url]);\r\n  const uploadPhoto = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"instagram\");\r\n    data.append(\"cloud_name\", \"dmxlnl9ee\");\r\n\r\n    fetch(\"https://api.cloudinary.com/v1_1/dmxlnl9ee/image/upload\", {\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setUrl(data.url);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const uploadFields = () => {\r\n    if (\r\n      !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\r\n        email\r\n      )\r\n    ) {\r\n      return M.toast({\r\n        html: \"Invalid Email\",\r\n        classes: \"b9f6ca red darken-3\",\r\n      });\r\n    }\r\n    fetch(\"/signup\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name,\r\n        email,\r\n        password,\r\n        pic: url,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.error) {\r\n          M.toast({ html: data.error, classes: \"#b71c1c red darken-3\" });\r\n        } else {\r\n          M.toast({ html: data.message, classes: \"#388 green darken-2\" });\r\n          history.push(\"/signin\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const postData = () => {\r\n    if (image) {\r\n      uploadPhoto();\r\n    } else {\r\n      uploadFields();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signin\">\r\n      <div className=\"signin__card\">\r\n        <img\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Instagram_logo.svg/1200px-Instagram_logo.svg.png\"\r\n          alt=\"\"\r\n        />\r\n        <div className=\"signin__input\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Username\"\r\n            value={name}\r\n            onChange={(e) => setName(e.target.value)}\r\n            style={{\r\n              border: \"1px solid black\",\r\n              height: \"30px\",\r\n              borderRadius: \"5px\",\r\n              textAlign: \"center\",\r\n            }}\r\n          />\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            style={{\r\n              border: \"1px solid black\",\r\n              height: \"30px\",\r\n              borderRadius: \"5px\",\r\n              textAlign: \"center\",\r\n            }}\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            style={{\r\n              border: \"1px solid black\",\r\n              height: \"30px\",\r\n              borderRadius: \"5px\",\r\n              textAlign: \"center\",\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"file-field input-field\">\r\n          <div className=\"btn #0095f6 blue darken-1\">\r\n            <span>Upload Image</span>\r\n            <input onChange={(e) => setImage(e.target.files[0])} type=\"file\" />\r\n          </div>\r\n          <div className=\"file-path-wrapper\">\r\n            <input className=\"file-path validate\" type=\"text\" />\r\n          </div>\r\n        </div>\r\n        <Button\r\n          onClick={() => postData()}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"signin__button\"\r\n        >\r\n          Signup\r\n        </Button>\r\n        <p className=\"signin__pera\">\r\n          Already Have an Account?{\" \"}\r\n          <Link to=\"/signin\" className=\"signin__link\">\r\n            Signin\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signup;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"../styles/Signin.css\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport M from \"materialize-css\";\r\nimport { userContext } from \"../App\";\r\n\r\nfunction Signin() {\r\n  const { state, dispatch } = useContext(userContext);\r\n  const [password, setPassword] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const history = useHistory();\r\n  const postData = () => {\r\n    if (\r\n      !/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\r\n        email\r\n      )\r\n    ) {\r\n      return M.toast({\r\n        html: \"Invalid Email\",\r\n        classes: \"#b9f6ca red darken-3\",\r\n      });\r\n    }\r\n    fetch(\"/signin\", {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email,\r\n        password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        // console.log(data);\r\n        if (data.error) {\r\n          M.toast({ html: data.error, classes: \"#b71c1c red darken-3\" });\r\n        } else {\r\n          localStorage.setItem(\"jwt\", data.token);\r\n          localStorage.setItem(\"user\", JSON.stringify(data.user));\r\n          dispatch({ type: \"USER\", payload: data.user });\r\n          M.toast({ html: \"Signin Success\", classes: \"#388 green darken-2\" });\r\n          history.push(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"signin\">\r\n      <div className=\"signin__card\">\r\n        <img\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/2a/Instagram_logo.svg/1200px-Instagram_logo.svg.png\"\r\n          alt=\"\"\r\n        />\r\n        <div className=\"signin__input\">\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            style={{\r\n              border: \"1px solid black\",\r\n              height: \"30px\",\r\n              borderRadius: \"5px\",\r\n              textAlign: \"center\",\r\n            }}\r\n          />\r\n          <input\r\n            placeholder=\"Password\"\r\n            type=\"password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            style={{\r\n              border: \"1px solid black\",\r\n              height: \"30px\",\r\n              borderRadius: \"5px\",\r\n              textAlign: \"center\",\r\n            }}\r\n          />\r\n        </div>\r\n        <Button\r\n          onClick={() => postData()}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          className=\"signin__button\"\r\n        >\r\n          Signin\r\n        </Button>\r\n        <p className=\"signin__pera\">\r\n          Dont Have an Account?{\" \"}\r\n          <Link to=\"/signup\" className=\"signin__link\">\r\n            Signup\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Signin;\r\n","import { Button } from \"@material-ui/core\";\r\nimport React, { useEffect, useContext, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { userContext } from \"../App\";\r\nimport \"../styles/Profile.css\";\r\nimport \"../styles/UserProfile.css\";\r\nimport PersonAddIcon from \"@material-ui/icons/PersonAdd\";\r\nimport PersonAddDisabledIcon from \"@material-ui/icons/PersonAddDisabled\";\r\n\r\nfunction Profile() {\r\n  const [userProfile, setProfile] = useState(null);\r\n  const { state, dispatch } = useContext(userContext);\r\n  const { userid } = useParams();\r\n  const [showFollow, setShowFollow] = useState(\r\n    state ? state.followers.includes(userid) : true\r\n  );\r\n\r\n  //   console.log(userid);\r\n  useEffect(() => {\r\n    fetch(`/user/${userid}`, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // console.log(result);\r\n        setProfile(result);\r\n      });\r\n  }, []);\r\n  const followUser = () => {\r\n    fetch(\"/follow\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        followId: userid,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        dispatch({\r\n          type: \"UPDATE\",\r\n          payload: {\r\n            following: data.following,\r\n            followers: data.followers,\r\n          },\r\n        });\r\n        localStorage.setItem(\"user\", JSON.stringify(data));\r\n        setProfile((prevState) => {\r\n          return {\r\n            ...prevState,\r\n            user: {\r\n              ...prevState.user,\r\n              followers: [...prevState.user.followers, data._id],\r\n            },\r\n          };\r\n        });\r\n        setShowFollow(false);\r\n      });\r\n  };\r\n  const unfollowUser = () => {\r\n    fetch(\"/unfollow\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        unfollowId: userid,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        console.log(data);\r\n        dispatch({\r\n          type: \"UPDATE\",\r\n          payload: {\r\n            following: data.following,\r\n            followers: data.followers,\r\n          },\r\n        });\r\n        localStorage.setItem(\"user\", JSON.stringify(data));\r\n        setProfile((prevState) => {\r\n          const newFollower = prevState.user.followers.filter(\r\n            (item) => item != data._id\r\n          );\r\n\r\n          return {\r\n            ...prevState,\r\n            user: {\r\n              ...prevState.user,\r\n              followers: newFollower,\r\n            },\r\n          };\r\n        });\r\n        setShowFollow(true);\r\n      });\r\n  };\r\n  return (\r\n    <>\r\n      {userProfile ? (\r\n        <div className=\"profile\">\r\n          <div className=\"profile__div1\">\r\n            <div>\r\n              <img\r\n                className=\"profile__image\"\r\n                src={userProfile.user.pic}\r\n                alt=\"\"\r\n              />\r\n            </div>\r\n            <div>\r\n              <h4>{userProfile.user.name}</h4>\r\n              <h4>{userProfile.user.email}</h4>\r\n              <div className=\"profile__details\">\r\n                <h6>{userProfile.posts.length} Posts</h6>\r\n                <h6>{userProfile.user.followers.length} Followers</h6>\r\n                <h6>{userProfile.user.following.length} Following</h6>\r\n              </div>\r\n              <div className=\"profile__buttons\">\r\n                {showFollow ? (\r\n                  <Button onClick={() => followUser()}>\r\n                    <PersonAddIcon color=\"primary\" />\r\n                  </Button>\r\n                ) : (\r\n                  <Button onClick={() => unfollowUser()}>\r\n                    <PersonAddDisabledIcon color=\"secondary\" />\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <hr></hr>\r\n          <div className=\"profile__div2\">\r\n            {userProfile.posts.map((item) => {\r\n              return <img key={item._id} src={item.photo} alt=\"\" />;\r\n            })}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <h2>Loading....</h2>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Profile;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"../styles/createPost.css\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport M from \"materialize-css\";\r\n\r\nfunction CreatPost() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [body, setBody] = useState(\"\");\r\n  const [image, setImage] = useState(\"\");\r\n  const [url, setUrl] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      fetch(\"/createpost\", {\r\n        method: \"post\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n        },\r\n        body: JSON.stringify({\r\n          title,\r\n          body,\r\n          pic: url,\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          // console.log(data);\r\n          if (data.error) {\r\n            M.toast({ html: data.error, classes: \"#b71c1c red darken-3\" });\r\n          } else {\r\n            M.toast({\r\n              html: \"Created Success\",\r\n              classes: \"#388 green darken-2\",\r\n            });\r\n            history.push(\"/\");\r\n          }\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n    }\r\n  }, [url]);\r\n\r\n  const postDetails = () => {\r\n    const data = new FormData();\r\n    data.append(\"file\", image);\r\n    data.append(\"upload_preset\", \"instagram\");\r\n    data.append(\"cloud_name\", \"dmxlnl9ee\");\r\n\r\n    fetch(\"https://api.cloudinary.com/v1_1/dmxlnl9ee/image/upload\", {\r\n      method: \"post\",\r\n      body: data,\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setUrl(data.url);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <div className=\"createPost\">\r\n      <h3>New Post</h3>\r\n      <input\r\n        value={title}\r\n        onChange={(e) => setTitle(e.target.value)}\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n      />\r\n      <input\r\n        value={body}\r\n        onChange={(e) => setBody(e.target.value)}\r\n        type=\"text\"\r\n        placeholder=\"Description\"\r\n      />\r\n      <div className=\"file-field input-field\">\r\n        <div className=\"btn #0095f6 blue darken-1\">\r\n          <span>Upload</span>\r\n          <input onChange={(e) => setImage(e.target.files[0])} type=\"file\" />\r\n        </div>\r\n        <div className=\"file-path-wrapper\">\r\n          <input className=\"file-path validate\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n      <Button onClick={() => postDetails()}>Post</Button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CreatPost;\r\n","export const initialState = null;\r\n\r\nexport const reducer = (state, action) => {\r\n  if ((action.type = \"USER\")) {\r\n    return action.payload;\r\n  }\r\n  if ((action.type = \"CLEAR\")) {\r\n    return null;\r\n  }\r\n  if ((action.type = \"UPDATE\")) {\r\n    return {\r\n      ...state,\r\n      followers: action.payload.followers,\r\n      following: action.payload.following,\r\n    };\r\n  }\r\n  if ((action.type = \"UPDATEPIC\")) {\r\n    return {\r\n      ...state,\r\n      pic: action.payload,\r\n    };\r\n  }\r\n  return state;\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"../styles/Container.css\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ChatBubbleOutlineOutlinedIcon from \"@material-ui/icons/ChatBubbleOutlineOutlined\";\r\nimport SendOutlinedIcon from \"@material-ui/icons/SendOutlined\";\r\nimport Delete from \"@material-ui/icons/Delete\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { userContext } from \"../App\";\r\n\r\nfunction Container() {\r\n  const [data, setData] = useState([]);\r\n  const { state, dispatch } = useContext(userContext);\r\n\r\n  useEffect(() => {\r\n    fetch(\"/getFollowPosts\", {\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        setData(result.posts);\r\n      });\r\n  }, []);\r\n\r\n  const likePost = (id) => {\r\n    fetch(\"/like\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (item._id === result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const unlikePost = (id) => {\r\n    fetch(\"/unlike\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: id,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        // console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (item._id === result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  const makeComment = (text, postId) => {\r\n    fetch(\"/comment\", {\r\n      method: \"put\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n      body: JSON.stringify({\r\n        postId: postId,\r\n        text: text,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.map((item) => {\r\n          if (item._id === result._id) {\r\n            return result;\r\n          } else {\r\n            return item;\r\n          }\r\n        });\r\n        setData(newData);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  const deletePost = (postid) => {\r\n    fetch(`/deletepost/${postid}`, {\r\n      method: \"delete\",\r\n      headers: {\r\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\r\n      },\r\n    })\r\n      .then((res) => res.json())\r\n      .then((result) => {\r\n        console.log(result);\r\n        const newData = data.filter((item) => {\r\n          return item._id !== result._id;\r\n        });\r\n        setData(newData);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {data.map((item) => {\r\n        // console.log(item);\r\n        return (\r\n          <div key={item._id} className=\"container__main\">\r\n            <div className=\"container__header\">\r\n              <img src={item ? item.postedBy.pic : \"Loading...\"} alt=\"\" />\r\n              <h6>\r\n                <Link\r\n                  to={\r\n                    item.postedBy._id !== state._id\r\n                      ? `/profile/${item.postedBy._id}`\r\n                      : `/profile`\r\n                  }\r\n                >\r\n                  {item.postedBy.name}\r\n                </Link>\r\n              </h6>\r\n              {item.postedBy._id === state._id && (\r\n                <Delete onClick={() => deletePost(item._id)} />\r\n              )}\r\n            </div>\r\n            <div className=\"container__body\">\r\n              <img src={item.photo} alt=\"\" />\r\n              <div className=\"container__bodyIcons\">\r\n                {item.likes.includes(state._id) ? (\r\n                  <FavoriteIcon\r\n                    color=\"secondary\"\r\n                    onClick={() => {\r\n                      unlikePost(item._id);\r\n                    }}\r\n                  />\r\n                ) : (\r\n                  <FavoriteBorderIcon\r\n                    onClick={() => {\r\n                      likePost(item._id);\r\n                    }}\r\n                  />\r\n                )}\r\n\r\n                <ChatBubbleOutlineOutlinedIcon />\r\n                <SendOutlinedIcon />\r\n              </div>\r\n              <h6>{item.likes.length} Likes</h6>\r\n              <h6>{item.title}</h6>\r\n              <p>{item.body}</p>\r\n              {/* Make Comments page here down */}\r\n              {item.comments.map((record) => {\r\n                return (\r\n                  <h6 key={record._id}>\r\n                    <span style={{ fontWeight: \"500\" }}>\r\n                      {record.postedBy.name}\r\n                    </span>{\" \"}\r\n                    {record.text}\r\n                  </h6>\r\n                );\r\n              })}\r\n              <hr></hr>\r\n              <form\r\n                onSubmit={(e) => {\r\n                  e.preventDefault();\r\n                  makeComment(e.target[0].value, item._id);\r\n                }}\r\n                className=\"container__bodyFooter\"\r\n              >\r\n                <input type=\"text\" placeholder=\"Add a comment...\" />\r\n                <Button>Post</Button>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Container;\r\n","import React, { useEffect, createContext, useReducer, useContext } from \"react\";\nimport \"./App.css\";\nimport Navbar from \"./components/Navbar\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  useHistory,\n} from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Profile from \"./components/Profile\";\nimport Signup from \"./components/Signup\";\nimport Signin from \"./components/Signin\";\nimport UserProfile from \"./components/UserProfile\";\nimport CreatePost from \"./components/CreatePost\";\nimport { reducer, initialState } from \"./reducer/userReducer\";\nimport FollowingPosts from \"./components/Followingposts\";\n\nexport const userContext = createContext();\n\nconst Routing = () => {\n  const history = useHistory();\n  const { state, dispatch } = useContext(userContext);\n  useEffect(() => {\n    const user = JSON.parse(localStorage.getItem(\"user\"));\n    if (user) {\n      dispatch({ type: \"USER\", payload: user });\n    } else {\n      if (!history.location.pathname.startsWith(\"/reset\"))\n        history.push(\"/signin\");\n    }\n  }, []);\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Home />\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route path=\"/createpost\">\n        <CreatePost />\n      </Route>\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n      <Route path=\"/profile/:userid\">\n        <UserProfile />\n      </Route>\n      <Route path=\"/followersposts\">\n        <FollowingPosts />\n      </Route>\n    </Switch>\n  );\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <userContext.Provider value={{ state, dispatch }}>\n      <div className=\"app\">\n        <Router>\n          <Navbar />\n          <Routing />\n        </Router>\n      </div>\n    </userContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}